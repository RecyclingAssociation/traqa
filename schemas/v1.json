{
    "openapi": "3.0.1",
    "info": {
        "title": "Traqa API",
        "description": "Traqa API to enable communication between Shippers and Load Sites for efficient exchange of data in the recycling supply chain",
        "version": "1.1.1",
        "contact": {
            "name": "Traqa Integrations",
            "url": "https://www.traqa.io",
            "email": "integration@traqa.io"
        }
    },
    "servers": [
        {
            "url": "https://uat.api.traqa.io/v1",
            "description": "User Acceptance Testing Url for Traqa API"
        },
        {
            "url": "https://api.traqa.io/v1",
            "description": "Production Base URL for Traqa API"
        }
    ],
    "paths": {
        "/getToken": {
            "post": {
                "summary": "Obtain an access token",
                "tags": [
                    "Authentication"
                ],
                "description": "Before making requests you need to authorise and exchange your username and password for an IdToken that can be passed in subsequent requests.\nThe token will expire after 60 minutes.\nYou can use the RefreshToken (which expires after 1 month).\nTo refresh: send a POST request to the getToken endpoint with the header refresh_token.",
                "responses": {
                    "200": {
                        "description": "Successful token response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response200Token"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/permissions": {
            "get": {
                "summary": "Retrieve all permissions",
                "tags": [
                    "Authentication"
                ],
                "description": "Retrieve the identifiers of every party which the requestor has the permission to make requests on behalf of.",
                "responses": {
                    "200": {
                        "description": "Successful permissions response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionsRetrieved"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/loads": {
            "get": {
                "summary": "Retrieve loadplan(s) details",
                "tags": [
                    "Load Plans"
                ],
                "description": "Retrieve details for a particular loadplan, or set of loadplans.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PaginationTokenRequestHeader"
                    },
                    {
                        "$ref": "#/components/parameters/OrganizationIdQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/LoadplanOrderQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/LoadplanStatusQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/LoadplanLimitQueryParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful loads retrieval response",
                        "headers": {
                            "pagination-token": {
                                "$ref": "#/components/schemas/PaginationTokenResponseHeader"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/Loadplan"
                                            },
                                            {
                                                "$ref": "#/components/schemas/LoadplanCompleted"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                },
                                "examples": {
                                    "multiplePermissions": {
                                        "value": {
                                            "message": "Missing organizationId Query String"
                                        },
                                        "summary": "Error message when requestor has multiple permissions but has not specified which one they are acting on behalf of."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "summary": "Post or update loadplan details",
                "tags": [
                    "Load Plans"
                ],
                "description": "Post or update the details for a particular loadplan that has yet to be loaded.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Loadplan"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful loads post response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Empty"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                },
                                "examples": {
                                    "missingProperty": {
                                        "value": {
                                            "errorType": "BAD_REQUEST_BODY",
                                            "ErrorMessage": "[object has missing required properties ([\"loadingSite\"])]",
                                            "requestId": "886f4d53-f256-43c6-85da-944a3d1cde71",
                                            "requestTime": "29/Sep/2023:08:42:49 +0000"
                                        },
                                        "summary": "Error message when requestor has attempted to post loadplan details without specifying the relevant loading site's identifier."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                },
                                "examples": {
                                    "alreadyCompleted": {
                                        "value": {
                                            "errorType": "BadRequest",
                                            "errorMessage": "Load Has Already Been Completed",
                                            "requestId": "886f4d53-f256-43c6-85da-944a3d1cde71",
                                            "requestTime": "29/Sep/2023:08:42:49 +0000"
                                        },
                                        "summary": "Error message when requestor has attempted to post loadplan details for a load which has already been 'completed' (loaded)."
                                    },
                                    "lackOfPermission": {
                                        "value": {
                                            "errorType": "Forbidden",
                                            "errorMessage": "",
                                            "requestId": "886f4d53-f256-43c6-85da-944a3d1cde71",
                                            "requestTime": "29/Sep/2023:08:42:49 +0000"
                                        },
                                        "summary": "Error message when requestor has attempted to post loadplan details and specified a shipper which they do not have the permissions to act on behalf of."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/loads/byDate/{date}": {
            "get": {
                "summary": "Retrieve loadplan(s) details by scheduled loading date",
                "tags": [
                    "Load Plans"
                ],
                "description": "Retrieve details for a particular loadplan, or set of loadplans that are scheduled to be loaded at a particular date (or time).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ScheduledLoadingDatePathParameter"
                    },
                    {
                        "$ref": "#/components/parameters/PaginationTokenRequestHeader"
                    },
                    {
                        "$ref": "#/components/parameters/OrganizationIdQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/LoadplanOrderQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/LoadplanStatusQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/LoadplanLimitQueryParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "pagination-token": {
                                "$ref": "#/components/schemas/PaginationTokenResponseHeader"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/Loadplan"
                                            },
                                            {
                                                "$ref": "#/components/schemas/LoadplanCompleted"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                },
                                "examples": {
                                    "multiplePermissions": {
                                        "value": {
                                            "message": "Missing organizationId Query String"
                                        },
                                        "summary": "Error message when requestor has multiple permissions but has not specified which one they are acting on behalf of."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/loads/byLoadingReference/{loadingReference}": {
            "get": {
                "summary": "Retrieve loadplan(s) details by loading reference",
                "tags": [
                    "Load Plans"
                ],
                "description": "Retrieve details for a particular loadplan, or set of loadplans that have a particular identifying reference.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LoadingReferencePathParameter"
                    },
                    {
                        "$ref": "#/components/parameters/PaginationTokenRequestHeader"
                    },
                    {
                        "$ref": "#/components/parameters/OrganizationIdQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/LoadplanOrderQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/LoadplanStatusQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/LoadplanLimitQueryParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "pagination-token": {
                                "$ref": "#/components/schemas/PaginationTokenResponseHeader"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/Loadplan"
                                            },
                                            {
                                                "$ref": "#/components/schemas/LoadplanCompleted"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                },
                                "examples": {
                                    "multiplePermissions": {
                                        "value": {
                                            "message": "Missing organizationId Query String"
                                        },
                                        "summary": "Error message when requestor has multiple permissions but has not specified which one they are acting on behalf of."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/loads/byWeekNo/{weekNo}": {
            "get": {
                "summary": "Retrieve loadplan(s) details by scheduled loading date week number",
                "tags": [
                    "Load Plans"
                ],
                "description": "Retrieve details for a particular loadplan, or set of loadplans that are scheduled to be loaded in a particular week.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/WeekNumberPathParameter"
                    },
                    {
                        "$ref": "#/components/parameters/YearPathParameter"
                    },
                    {
                        "$ref": "#/components/parameters/PaginationTokenRequestHeader"
                    },
                    {
                        "$ref": "#/components/parameters/OrganizationIdQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/LoadplanOrderQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/LoadplanStatusQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/LoadplanLimitQueryParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 response",
                        "headers": {
                            "pagination-token": {
                                "$ref": "#/components/schemas/PaginationTokenResponseHeader"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/Loadplan"
                                            },
                                            {
                                                "$ref": "#/components/schemas/LoadplanCompleted"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                },
                                "examples": {
                                    "multiplePermissions": {
                                        "value": {
                                            "message": "Missing organizationId Query String"
                                        },
                                        "summary": "Error message when requestor has multiple permissions but has not specified which one they are acting on behalf of."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/weights": {
            "post": {
                "summary": "Post the weighing record details for a load",
                "tags": [
                    "Weights"
                ],
                "description": "Post the weighing record details for a particular loadplan that has yet to be loaded.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WeighingRecord"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful weights post response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Empty"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                },
                                "examples": {
                                    "missingProperty": {
                                        "value": {
                                            "errorType": "BAD_REQUEST_BODY",
                                            "ErrorMessage": "[object has missing required properties ([\"loadingSite\"])]",
                                            "requestId": "886f4d53-f256-43c6-85da-944a3d1cde71",
                                            "requestTime": "29/Sep/2023:08:42:49 +0000"
                                        },
                                        "summary": "Error message when requestor has attempted to post weighing record details without specifying the relevant loading site's identifier."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                },
                                "examples": {
                                    "alreadyCompleted": {
                                        "value": {
                                            "errorType": "BadRequest",
                                            "errorMessage": "Load Has Already Been Completed",
                                            "requestId": "886f4d53-f256-43c6-85da-944a3d1cde71",
                                            "requestTime": "29/Sep/2023:08:42:49 +0000"
                                        },
                                        "summary": "Error message when requestor has attempted to post weighing record details for a load which has already been 'completed' (loaded)."
                                    },
                                    "lackOfPermission": {
                                        "value": {
                                            "errorType": "Forbidden",
                                            "errorMessage": "",
                                            "requestId": "886f4d53-f256-43c6-85da-944a3d1cde71",
                                            "requestTime": "29/Sep/2023:08:42:49 +0000"
                                        },
                                        "summary": "Error message when requestor has attempted to post weighing record details and specified a loading site which they do not have the permissions to act on behalf of."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/documents/preAnnexvii": {
            "get": {
                "summary": "Retrieve the pre-Annex VII of a loadplan",
                "tags": [
                    "Documents"
                ],
                "description": "Retrieve a loadplan's Annex VII with placeholders in the instance where it has yet to be loaded.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LoadingReferenceQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/OrganizationIdQueryParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful pre-Annex VII retrieval response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentRetrieved"
                                },
                                "examples": {
                                    "retrievedPreAnnexVII": {
                                        "value": {
                                            "document": "https://dev-traqa-application-preannexviioutputbucket-..."
                                        },
                                        "summary": "Successfully retrieved the pre-Annex VII for a loadplan."
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                },
                                "examples": {
                                    "multiplePermissions": {
                                        "value": {
                                            "message": "Missing organizationId query parameter"
                                        },
                                        "summary": "Error message when requestor has attempted to retrieve a pre-Annex VII document but has multiple permissions, making the specified loading reference ambiguous as to which organisation it belongs to."
                                    },
                                    "invalidLoadref": {
                                        "value": {
                                            "message": "Invalid Loading Reference Provided"
                                        },
                                        "summary": "Error message when requestor has attempted to retrieve a pre-Annex VII document but has specified a loading reference which is not on record for the given organisation."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                },
                                "examples": {
                                    "multiplePermissions": {
                                        "value": {
                                            "message": "Missing organizationId Query String"
                                        },
                                        "summary": "Error message when requestor has multiple permissions but has not specified which one they are acting on behalf of."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/documents/annexvii": {
            "get": {
                "summary": "Retrieve the Annex VII of a loadplan",
                "tags": [
                    "Documents"
                ],
                "description": "Retrieve a loadplan's Annex VII.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LoadingReferenceQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/OrganizationIdQueryParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Annex VII retrieval response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentRetrieved"
                                },
                                "examples": {
                                    "retrievedAnnexVII": {
                                        "value": {
                                            "document": "https://dev-traqa-application-annexviioutputbucket-..."
                                        },
                                        "summary": "Successfully retrieved the Annex VII for a loadplan."
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                },
                                "examples": {
                                    "multiplePermissions": {
                                        "value": {
                                            "message": "Missing organizationId query parameter"
                                        },
                                        "summary": "Error message when requestor has attempted to retrieve a Annex VII document but has multiple permissions, making the specified loading reference ambiguous as to which organisation it belongs to."
                                    },
                                    "invalidLoadref": {
                                        "value": {
                                            "message": "Invalid Loading Reference Provided"
                                        },
                                        "summary": "Error message when requestor has attempted to retrieve a Annex VII document but has specified a loading reference which is not on record for the given organisation."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                },
                                "examples": {
                                    "multiplePermissions": {
                                        "value": {
                                            "message": "Missing organizationId Query String"
                                        },
                                        "summary": "Error message when requestor has multiple permissions but has not specified which one they are acting on behalf of."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "message": "Document Not Found"
                                        },
                                        "summary": "Document not found for the loadplan as it doesn't exist."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/documents/annexvii/{loadingReference}/{shipperOrganizationId}": {
            "post": {
                "summary": "Add the Annex VII of a loadplan",
                "tags": [
                    "Documents"
                ],
                "description": "Add the Annex VII document for a loadplan. This can be a scan/image/pdf file",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LoadingReferencePathParameter"
                    },
                    {
                        "$ref": "#/components/parameters/ShipperOrganizationIdPathParameter"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FilePostRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful document post response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Empty"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/documents/weighbridgeCertificate": {
            "get": {
                "summary": "Retrieve the Weighbridge Certificate of a loadplan",
                "tags": [
                    "Documents"
                ],
                "description": "Retrieve a loadplan's Weighbridge Certificate.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LoadingReferenceQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/OrganizationIdQueryParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Weighbridge Certificate retrieval response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentRetrieved"
                                },
                                "examples": {
                                    "retrievedAnnexVII": {
                                        "value": {
                                            "document": "https://dev-traqa-application-weighbridgeticketoutputbuck-..."
                                        },
                                        "summary": "Successfully retrieved the Weighbridge Certificate for a loadplan."
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                },
                                "examples": {
                                    "multiplePermissions": {
                                        "value": {
                                            "message": "Missing organizationId query parameter"
                                        },
                                        "summary": "Error message when requestor has attempted to retrieve a Weighbridge Certificate document but has multiple permissions, making the specified loading reference ambiguous as to which organisation it belongs to."
                                    },
                                    "invalidLoadref": {
                                        "value": {
                                            "message": "Invalid Loading Reference Provided"
                                        },
                                        "summary": "Error message when requestor has attempted to retrieve a Weighbridge Certificate document but has specified a loading reference which is not on record for the given organisation."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                },
                                "examples": {
                                    "multiplePermissions": {
                                        "value": {
                                            "message": "Missing organizationId Query String"
                                        },
                                        "summary": "Error message when requestor has multiple permissions but has not specified which one they are acting on behalf of."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "message": "Document Not Found"
                                        },
                                        "summary": "Document not found for the loadplan as it doesn't exist."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/documents/weighbridgeCertificate/{loadingReference}/{shipperOrganizationId}": {
            "post": {
                "summary": "Add the Weighbridge Certificate of a loadplan",
                "tags": [
                    "Documents"
                ],
                "description": "Add the Weighbridge Certificate document for a loadplan. This can be a scan/image/pdf file",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LoadingReferencePathParameter"
                    },
                    {
                        "$ref": "#/components/parameters/ShipperOrganizationIdPathParameter"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FilePostRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful document post response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Empty"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/documents/commercialInvoice": {
            "get": {
                "summary": "Retrieve the Commercial Invoice of a loadplan",
                "tags": [
                    "Documents"
                ],
                "description": "Retrieve a loadplan's Commercial Invoice.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LoadingReferenceQueryParameter"
                    },
                    {
                        "$ref": "#/components/parameters/OrganizationIdQueryParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Commercial Invoice retrieval response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentRetrieved"
                                },
                                "examples": {
                                    "retrievedAnnexVII": {
                                        "value": {
                                            "document": "https://dev-traqa-application-commercialinvoicebuck-..."
                                        },
                                        "summary": "Successfully retrieved the Commercial Invoice for a loadplan."
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                },
                                "examples": {
                                    "multiplePermissions": {
                                        "value": {
                                            "message": "Missing organizationId query parameter"
                                        },
                                        "summary": "Error message when requestor has attempted to retrieve a Commercial Invoice document but has multiple permissions, making the specified loading reference ambiguous as to which organisation it belongs to."
                                    },
                                    "invalidLoadref": {
                                        "value": {
                                            "message": "Invalid Loading Reference Provided"
                                        },
                                        "summary": "Error message when requestor has attempted to retrieve a Commercial Invoice document but has specified a loading reference which is not on record for the given organisation."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                },
                                "examples": {
                                    "multiplePermissions": {
                                        "value": {
                                            "message": "Missing organizationId Query String"
                                        },
                                        "summary": "Error message when requestor has multiple permissions but has not specified which one they are acting on behalf of."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                },
                                "examples": {
                                    "notFound": {
                                        "value": {
                                            "message": "Document Not Found"
                                        },
                                        "summary": "Document not found for the loadplan as it doesn't exist."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/photos/byLoadingReference/{loadingReference}": {
            "get": {
                "summary": "Retrieve the photos of a loadplan",
                "tags": [
                    "Photos"
                ],
                "description": "Retrieve photos associated with a loadplan. Such as container, equipment and trailer images.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LoadingReferencePathParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful photos retrieval response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhotosRetrieved"
                                },
                                "examples": {
                                    "noPhotos": {
                                        "value": {
                                            "photos": []
                                        },
                                        "summary": "If the loading reference is unrecognised or there are no photos associated with the loadplan, then an empty list is returned."
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/photos/byLoadingReference/{loadingReference}/{shipperOrganizationId}": {
            "post": {
                "summary": "Post photos for a loadplan",
                "tags": [
                    "Photos"
                ],
                "description": "Post photos of containers/equipment/trailers etc. associated with the loading of a loadplan.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LoadingReferencePathParameter"
                    },
                    {
                        "$ref": "#/components/parameters/ShipperOrganizationIdPathParameter"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FilePostRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful document post response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Empty"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden request response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response403"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource not found response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response404"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response500"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cognito_apikey_auth": []
                    },
                    {
                        "api_key": []
                    }
                ]
            }
        }
    },
    "components": {
        "parameters": {},
        "schemas": {
            "Empty": {
                "title": "Empty Schema",
                "type": "object"
            },
            "PermissionsRetrieved": {
                "title": "Permissions Information",
                "type": "object",
                "description": "Information on a user's available permissions groups",
                "properties": {
                    "Groups": {
                        "title": "Groups",
                        "type": "array",
                        "description": "A list of permission groups",
                        "items": {
                            "type": "object",
                            "properties": {
                                "Name": {
                                    "type": "string"
                                },
                                "Code": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "example": {
                    "Groups": [
                        {
                            "Name": "demo shipper 1",
                            "Code": "TQGBDEMOA"
                        },
                        {
                            "Name": "demo shipper 2",
                            "Code": "TQGBTESTA"
                        }
                    ],
                    "Count": 2,
                    "DateOfRequest": "2023-09-28T16:44:08"
                }
            },
            "DocumentRetrieved": {
                "title": "Document",
                "type": "object",
                "description": "A document retrieved for a specific load plan.",
                "properties": {
                    "document": {
                        "title": "Document pre-signed URL",
                        "type": "string",
                        "pattern": "^https:\\/\\/\\w+\\.s3\\.amazonaws\\.com\\/[\\w-]+\\.pdf\\?AWSAccessKeyId=[\\w]+&Signature=[\\w%]+&x-amz-security-token=[\\w%]+&Expires=\\d+$\n"
                    }
                },
                "example": {
                    "document": "https://prod-traqa-application-..."
                }
            },
            "Address": {
                "title": "Address",
                "description": "The provided structured address for a given party",
                "type": "object",
                "properties": {
                    "street": {
                        "title": "Street Name",
                        "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)\\']+$",
                        "type": "string",
                        "example": "123 Main Street"
                    },
                    "city": {
                        "title": "City",
                        "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)\\']+$",
                        "type": "string",
                        "example": "Liverpool"
                    },
                    "state": {
                        "title": "State",
                        "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)\\']+$",
                        "type": "string",
                        "example": "Merseyside"
                    },
                    "postcode": {
                        "title": "Post Code",
                        "pattern": "^[a-zA-Z0-9\\ \\-]+$",
                        "type": "string"
                    },
                    "country": {
                        "title": "Country",
                        "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)\\']+$",
                        "type": "string"
                    }
                }
            },
            "Carrier": {
                "title": "Ocean Carrier",
                "description": "The Ocean Carrier for use when containerised freight is moving by deep sea, this will show in Box 5b on the Annex VII",
                "type": "object",
                "required": [
                    "organizationId"
                ],
                "properties": {
                    "organizationId": {
                        "title": "A coded Identifier known as SCAC for Ocean Carriers",
                        "type": "string",
                        "description": "Ocean Carriers use an identifying code known as SCAC",
                        "enum": [
                            "ACLU",
                            "ANRM",
                            "AKMR",
                            "ANNU",
                            "APLU",
                            "ARKU",
                            "AROF",
                            "NSAU",
                            "BCLU",
                            "CEGL",
                            "CNIU",
                            "CPJQ",
                            "CMDU",
                            "11DX",
                            "COSU",
                            "CMCU",
                            "CHIW",
                            "NSLU",
                            "CHNJ",
                            "DAAE",
                            "DOLQ",
                            "EQLI",
                            "EIMU",
                            "ESPU",
                            "EUKO",
                            "EGLV",
                            "FESO",
                            "GFAL",
                            "ACSU",
                            "GRIU",
                            "GSLU",
                            "UBCU",
                            "GESC",
                            "SUDU",
                            "HLCU",
                            "HDMU",
                            "HUAU",
                            "HRZU",
                            "HYDU",
                            "IILU",
                            "IDMC",
                            "INOC",
                            "KKLU",
                            "KOSL",
                            "KMTU",
                            "CLIB",
                            "LGLT",
                            "LMCU",
                            "MAEU",
                            "MFTU",
                            "MRUB",
                            "MATS",
                            "MCCQ",
                            "MISC",
                            "MSCU",
                            "NIDU",
                            "NOSU",
                            "NODA",
                            "ONEY",
                            "OOLU",
                            "PSHI",
                            "PCIU",
                            "PMOL",
                            "PLLU",
                            "RCKI",
                            "SAFM",
                            "SLAQ",
                            "SKII",
                            "SCIU",
                            "SMLU",
                            "SEFN",
                            "SEJJ",
                            "SCYE",
                            "SKLU",
                            "CHVW",
                            "THZS",
                            "TOHO",
                            "TOTE",
                            "TRKU",
                            "UALC",
                            "USLU",
                            "WECU",
                            "WWSU",
                            "22AA",
                            "WDLS",
                            "WLWH",
                            "YMLU",
                            "ZIMU"
                        ]
                    },
                    "name": {
                        "title": "The Name of the Ocean Carrier",
                        "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)\\']+$",
                        "type": "string",
                        "description": "The Name of the carrier in freetext",
                        "example": "Mediterranean Shipping Company S.A."
                    }
                }
            },
            "Consignee": {
                "title": "Consignee",
                "minProperties": 1,
                "type": "object",
                "properties": {
                    "organizationId": {
                        "title": "A coded identifier for the Consignee",
                        "pattern": "^[a-zA-Z0-9]{9,17}$",
                        "type": "string",
                        "description": "A coded value for the Consignee, for UK and Europe this should be the EORI if available or if not mutually agreed with Traqa."
                    },
                    "name": {
                        "title": "Consignee Name",
                        "type": "string",
                        "description": "Free Text Name of the Consignee",
                        "example": "Acme Importer"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Contact"
                    },
                    "vatNumber": {
                        "$ref": "#/components/schemas/VATNumber"
                    }
                },
                "description": "The Consignee is the person who will be receiving the consignment (material) they may not necessarily be the physical destination, this will show in Box 2 of the Annex VII"
            },
            "Contact": {
                "type": "object",
                "properties": {
                    "personName": {
                        "title": "Person Name",
                        "description": "The name, expressed as text, of this trade contact person.",
                        "type": "string",
                        "example": "Joe Smith"
                    },
                    "telephone": {
                        "title": "Telephone",
                        "description": "Telephone communication information for this trade contact.",
                        "type": "string",
                        "example": "0800 000 0000"
                    },
                    "emailAddress": {
                        "title": "Email Address",
                        "description": "The email address for this trade contact.",
                        "type": "string",
                        "example": "joe@domain.com"
                    }
                }
            },
            "HarmonizeSystemCode": {
                "title": "Harmonize System Code",
                "pattern": "^[0-9]{4,10}$",
                "type": "string",
                "description": "The Harmonised Commodity Code of the material for Customs reporting purposes",
                "example": "4707100000"
            },
            "VATNumber": {
                "title": "VAT Number",
                "type": "string",
                "pattern": "^[A-Z]{2}\\d{9}$",
                "example": "GB367877431"
            },
            "LoadingSite": {
                "title": "Loading Site",
                "required": [
                    "organizationId"
                ],
                "type": "object",
                "properties": {
                    "organizationId": {
                        "title": "Loading Site Code",
                        "pattern": "^[A-Z]{9}$",
                        "type": "string",
                        "description": "A registered BIC Facility Code to identify the facility the material is being loaded at",
                        "example": "GBEDMBIFA"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "name": {
                        "title": "Loading Site Name",
                        "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)\\']+$",
                        "type": "string",
                        "description": "Loading Site Name in Freetext",
                        "example": "Acme Loading Site Ltd"
                    }
                },
                "description": "The physical Loading Site of the Material which will provide weights to Traqa.  This will appear in Box 6 of the Annex VII"
            },
            "Loadplan": {
                "title": "Load Plan",
                "required": [
                    "consignee",
                    "dates",
                    "loadingSite",
                    "portOfDischarge",
                    "portOfLoading",
                    "references",
                    "tradeItem"
                ],
                "type": "object",
                "properties": {
                    "shipper": {
                        "$ref": "#/components/schemas/Shipper"
                    },
                    "carrier": {
                        "$ref": "#/components/schemas/Carrier"
                    },
                    "consignee": {
                        "$ref": "#/components/schemas/Consignee"
                    },
                    "recoveryFacility": {
                        "$ref": "#/components/schemas/RecoveryFacility"
                    },
                    "references": {
                        "title": "References",
                        "description": "References for the movements in Traqa to identify the load and weighbridge ticket along with other useful references as needed and agreed between parties",
                        "minProperties": 1,
                        "required": [
                            "pickupReferenceNumber"
                        ],
                        "type": "object",
                        "properties": {
                            "carriersReferenceNumber": {
                                "title": "Carriers Reference Number",
                                "pattern": "^[a-zA-Z0-9\\ \\-\\.\\/\\_]+$",
                                "type": "string",
                                "description": "The Ocean Carrier Booking Number used for tracking containers after loading, only useful for deep sea movements",
                                "example": "ONEY12345667"
                            },
                            "shippersIdentifyingNumberForShipment": {
                                "title": "Shippers Identifying Number For Shipment",
                                "pattern": "^[a-zA-Z0-9\\ \\-\\.\\,\\/\\_]+$",
                                "type": "string",
                                "description": "A purchase order number for the shipment, could be from shipper or consignee",
                                "example": "400126253"
                            },
                            "pickupReferenceNumber": {
                                "title": "Pickup Reference Number",
                                "minLength": 3,
                                "pattern": "^[a-zA-Z0-9\\ \\-\\.\\/\\_]+$",
                                "type": "string",
                                "description": "The loading reference the driver will provide to site on arrival, must be unique per load this is a key identifier in Traqa",
                                "example": "OCC-2456-1"
                            }
                        }
                    },
                    "portOfDischarge": {
                        "title": "Port Of Discharge",
                        "required": [
                            "UNLocode"
                        ],
                        "type": "object",
                        "properties": {
                            "UNLocode": {
                                "$ref": "#/components/schemas/UNLocode"
                            }
                        },
                        "description": "A coded reference to the location for the port of discharge, used in transport provided by the UN.  This determines the routing in the Annex VII for Box 11"
                    },
                    "dates": {
                        "title": "Dates",
                        "required": [
                            "scheduledLoadingTransportEvent"
                        ],
                        "type": "object",
                        "properties": {
                            "scheduledLoadingTransportEvent": {
                                "title": "The scheduledLoadingTransportEvent ",
                                "pattern": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d$",
                                "type": "string",
                                "description": "The planned date time of the loading at site, conform to yyyy-mm-ddThh:mm:ss",
                                "example": "2023-07-01T09:05:49"
                            }
                        },
                        "description": "Dates that are relevent to the load plan, namely the planned date time of loading"
                    },
                    "tradeItem": {
                        "title": "Trade Item",
                        "required": [
                            "description",
                            "harmonizeSystemCode"
                        ],
                        "type": "object",
                        "properties": {
                            "harmonizeSystemCode": {
                                "$ref": "#/components/schemas/HarmonizeSystemCode"
                            },
                            "description": {
                                "title": "Description of Goods",
                                "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)\\']+$",
                                "type": "string",
                                "description": "A free text description of the type of material that is being loaded/exported.  Populates Box 9 on the Annex VII",
                                "example": "OCC 80/20"
                            }
                        },
                        "description": "The detail for the type of material that is being loaded/exported"
                    },
                    "portOfLoading": {
                        "title": "Port Of Loading",
                        "required": [
                            "UNLocode"
                        ],
                        "type": "object",
                        "properties": {
                            "UNLocode": {
                                "$ref": "#/components/schemas/UNLocode"
                            }
                        },
                        "description": "A coded reference to the location for the port of loading, used in transport provided by the UN, populates Box 11 on the Annex VII for origin country."
                    },
                    "loadingSite": {
                        "$ref": "#/components/schemas/LoadingSite"
                    },
                    "pern": {
                        "$ref": "#/components/schemas/PERN"
                    },
                    "customs": {
                        "type": "object",
                        "properties": {
                            "invoice": {
                                "required": [
                                    "pricing",
                                    "amount",
                                    "currency"
                                ],
                                "type": "object",
                                "description": "Details required for the Commercial Invoice and Customs Declaration",
                                "properties": {
                                    "pricing": {
                                        "type": "string",
                                        "description": "Select pricing, either per tonne in which case it is calculated from the weighed tonnage, or total in which case it will be used as is",
                                        "enum": [
                                            "tonne",
                                            "total"
                                        ]
                                    },
                                    "amount": {
                                        "description": "Enter the Price per Tonne or Total Amount indicated in the pricing indicator, this should be in the currency provided.",
                                        "type": "number",
                                        "format": "decimal(12,2)",
                                        "example": 345.25
                                    },
                                    "currency": {
                                        "description": "Currency code as defined by ISO 4217",
                                        "type": "string",
                                        "example": "GBP"
                                    }
                                }
                            },
                            "incoterms": {
                                "type": "string",
                                "enum": [
                                    "CFR",
                                    "CIF",
                                    "CIP",
                                    "CPT",
                                    "DAF",
                                    "DAP",
                                    "DAT",
                                    "DDP",
                                    "DDU",
                                    "DEQ",
                                    "DES",
                                    "EXW",
                                    "FAS",
                                    "FCA",
                                    "FOB",
                                    "XXX"
                                ]
                            },
                            "buyer": {
                                "$ref": "#/components/schemas/Buyer"
                            }
                        }
                    }
                },
                "description": "The Load Plan that is provided by the shipper to a load site via Traqa, this will create new loads in Traqa for loading at a site."
            },
            "PERN": {
                "title": "Packaging Export Recovery Note (PERN)",
                "description": "Information about a PERN thats required to appear on the Annex VII in Box 15, if not claiming a PERN omit from the load plan",
                "type": "object",
                "required": [
                    "percentage"
                ],
                "properties": {
                    "percentage": {
                        "title": "Percentage of MT",
                        "type": "number",
                        "format": "float",
                        "minimum": 1,
                        "maximum": 100,
                        "description": "Percentage of MT to be issued for PERN",
                        "example": 65.5
                    }
                }
            },
            "RecoveryFacility": {
                "title": "Recovery Facility",
                "type": "object",
                "properties": {
                    "organizationId": {
                        "title": "A coded identifier for the Recovery Facility",
                        "pattern": "^[a-zA-Z0-9]{9,17}$",
                        "type": "string",
                        "description": "A coded value for the Recovery Facility, for UK and Europe this should be the EORI if available or if not mutually agreed with Traqa."
                    },
                    "name": {
                        "title": "Recovery Facility Name",
                        "type": "string",
                        "description": "Free Text Name of the Recovery Facility",
                        "example": "ACME Recovery Site Ltd"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Contact"
                    }
                },
                "description": "The Recovery Facility should ONLY be provided when different to Box 2 (Consignee) if not provided it will default to Consignee.  This will populate Box 7 on the Annex VII"
            },
            "Shipper": {
                "title": "Shipper",
                "description": "The Shipper is the party who is exporting the material and submitting the load plan into Traqa, populates Box 1 on the Annex VII",
                "required": [
                    "organizationId"
                ],
                "type": "object",
                "properties": {
                    "organizationId": {
                        "title": "A coded Identifer for the Shipper",
                        "description": "The shipper Organisation Id is usually an EORI number assigned by a government, it can in place of this be a Traqa specific reference.",
                        "pattern": "^[a-zA-Z0-9]{9,17}$",
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "name": {
                        "title": "Shipper Name",
                        "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)\\']+$",
                        "type": "string",
                        "description": "The Name of the Shipper",
                        "example": "ACME Trader Ltd"
                    }
                }
            },
            "Buyer": {
                "title": "Buyer",
                "description": "Buyer/receiver of shipment. Overwrites the 'buyer' party shown on the commercial invoice",
                "anyOf": [
                    {
                        "required": [
                            "organizationId"
                        ]
                    },
                    {
                        "required": [
                            "name"
                        ]
                    }
                ],
                "type": "object",
                "properties": {
                    "organizationId": {
                        "title": "A coded Identifier for the Buyer",
                        "description": "The buyer Organisation Id is usually an EORI number assigned by a government",
                        "pattern": "^[a-zA-Z0-9]{9,17}$",
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "name": {
                        "title": "Buyer Name",
                        "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)\\']+$",
                        "type": "string",
                        "description": "The Name of the Buyer",
                        "example": "ACME Buyer Co"
                    },
                    "vatNumber": {
                        "$ref": "#/components/schemas/VATNumber"
                    }
                }
            },
            "UnitOfMeasure": {
                "title": "Unit of Measure",
                "pattern": "^[a-zA-Z]+$",
                "type": "string",
                "description": "Units of measure",
                "example": "KGM"
            },
            "UNLocode": {
                "title": "The UNLocode schema",
                "pattern": "^[A-Z0-9]{5}$",
                "type": "string",
                "description": "A coded reference to the location provided by the UN",
                "example": "GBLIV"
            },
            "Weight": {
                "required": [
                    "unit",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "unit": {
                        "$ref": "#/components/schemas/UnitOfMeasure"
                    },
                    "value": {
                        "title": "Weight Value",
                        "minimum": 1,
                        "type": "number",
                        "description": "The weight of the equipment, product or other",
                        "example": 26350
                    }
                }
            },
            "WeighingRecord": {
                "title": "Weighing Record from Weighbridge to complete load",
                "required": [
                    "dates",
                    "haulier",
                    "references",
                    "shipper",
                    "tradeItem",
                    "transportEquipment"
                ],
                "type": "object",
                "properties": {
                    "shipper": {
                        "$ref": "#/components/schemas/Shipper"
                    },
                    "references": {
                        "title": "References",
                        "required": [
                            "pickupReferenceNumber"
                        ],
                        "type": "object",
                        "properties": {
                            "despatchNoteNumber": {
                                "title": "The despatchNoteNumber schema",
                                "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)]+$",
                                "type": "string",
                                "description": "The weighbridge ticket number from the loading site.",
                                "example": "40012"
                            },
                            "vehicleIdentificationNumber": {
                                "title": "The vehicleIdentificationNumber schema",
                                "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)]+$",
                                "type": "string",
                                "description": "The registration number of the vehicle, populates box 5a on the Annex VII",
                                "example": "NV18 NLD"
                            },
                            "pickupReferenceNumber": {
                                "title": "The pickupReferenceNumber schema",
                                "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)]+$",
                                "type": "string",
                                "description": "The loading reference provided by the driver at site, must match the one from the load plan provided by Traqa",
                                "example": "OCC-2456-1"
                            },
                            "driverName": {
                                "title": "The driverName schema",
                                "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)]+$",
                                "type": "string",
                                "description": "Name of the driver. Populates box 5a on the Annex VII",
                                "example": "Lee"
                            }
                        },
                        "description": "References that are relevant to the Traqa loads and Shipper and Load Site to enable efficient exchange of loading data"
                    },
                    "transportEquipment": {
                        "title": "Transport Equipment",
                        "description": "The Trailier or Container that is loaded with the material from load site.",
                        "required": [
                            "equipmentNumber",
                            "verifiedWeight"
                        ],
                        "type": "object",
                        "properties": {
                            "verifiedWeight": {
                                "title": "Verified Weight",
                                "required": [
                                    "unit",
                                    "value",
                                    "weighingDate",
                                    "weightVerificationMethod"
                                ],
                                "type": "object",
                                "properties": {
                                    "weightVerificationMethod": {
                                        "title": "Weight Verification Method",
                                        "type": "string",
                                        "description": "SOLAS VGM provides 2 methods, for all that are weighed at a weighbridge use method 1.",
                                        "enum": [
                                            "1",
                                            "2"
                                        ]
                                    },
                                    "unit": {
                                        "$ref": "#/components/schemas/UnitOfMeasure"
                                    },
                                    "weighingDate": {
                                        "title": "The weighingDate schema",
                                        "pattern": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d$",
                                        "type": "string",
                                        "description": "Date of the weighing of trailer or container at a laoding site.  Populates Box 4 on the Annex VII",
                                        "example": "2023-07-01T09:47:38"
                                    },
                                    "value": {
                                        "title": "Value",
                                        "minimum": 1,
                                        "type": "number",
                                        "description": "The weight of the laden trailer or container including the tare weight of a container if appropriate",
                                        "example": 26350
                                    }
                                },
                                "description": "For container movements this container the Verified Gross Mass or VGM thats mandatory to enter a port for safety."
                            },
                            "equipmentTareWeight": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Weight"
                                    }
                                ],
                                "title": "Equipment Tare Weight",
                                "description": "The tare weight of the equipment (container or trailer) is required for containerised movements to calculate the VGM."
                            },
                            "seal": {
                                "title": "Seal Number",
                                "type": "array",
                                "description": "The seal number(s) used to seal the container or trailer after loading, multiple seal numbers can be present on a container, many only load with 1 or for trailers not always used.",
                                "items": {
                                    "title": "Seal Number",
                                    "required": [
                                        "identifier"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "identifier": {
                                            "title": "Identifier",
                                            "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)]+$",
                                            "type": "string",
                                            "description": "Seal Number used"
                                        }
                                    },
                                    "description": "The seal number used on the transport equipment"
                                }
                            },
                            "equipmentNumber": {
                                "title": "Equipment Number",
                                "type": "string",
                                "description": "The Container Number OR the Trailer number that the goods have been loaded onto",
                                "example": "MAEU1234567"
                            },
                            "equipmentType": {
                                "title": "Equipment Type",
                                "pattern": "^[a-zA-Z0-9]{4}$",
                                "type": "string",
                                "description": "The ISO Size Type for Deep Sea Containers",
                                "example": "45G1"
                            }
                        }
                    },
                    "haulier": {
                        "title": "Haulier",
                        "required": [
                            "name",
                            "organizationId"
                        ],
                        "type": "object",
                        "properties": {
                            "organizationId": {
                                "title": "A coded Identifier for the haulier who arrives at site",
                                "pattern": "^[a-zA-Z0-9]{7,13}$",
                                "type": "string",
                                "description": "The haulier identifier is the waste carrier license number, mandated by the EA.",
                                "example": "CBDU1234567"
                            },
                            "name": {
                                "title": "Name of Haulier",
                                "pattern": "^[a-zA-Z0-9\\&\\ \\-\\.\\,\\/\\_\\(\\)\\']+$",
                                "type": "string",
                                "description": "Freetext for Haulier Name",
                                "example": "Acme Haulage Co"
                            }
                        },
                        "description": "The Haulier who arrives at site to trasport the goods.  Populates box 5a on the Annex VII and verified with the EA"
                    },
                    "dates": {
                        "title": "Dates",
                        "required": [
                            "actualArrivalTransportEvent",
                            "actualDepartureTransportEvent"
                        ],
                        "type": "object",
                        "properties": {
                            "actualDepartureTransportEvent": {
                                "title": "The actualDepartureTransportEvent schema",
                                "pattern": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d$",
                                "type": "string",
                                "description": "The Actual Departure of the laden vehicle from Loading Site from final weigh, populates box 4 on the Annex VII for Departure Time.",
                                "example": "2023-07-01T09:47:38"
                            },
                            "actualArrivalTransportEvent": {
                                "title": "The actualArrivalTransportEvent schema",
                                "pattern": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d$",
                                "type": "string",
                                "description": "The Actual Arrival of the empty vehicle at Loading Site for the first weigh",
                                "example": "2023-07-01T08:30:38"
                            }
                        },
                        "description": "Dates relevant to the actual movement of material provided by the loading site "
                    },
                    "tradeItem": {
                        "title": "Trade Item",
                        "required": [
                            "grossWeight"
                        ],
                        "type": "object",
                        "properties": {
                            "grossWeight": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Weight"
                                    }
                                ],
                                "description": "Weight of the Material loaded for movement, populates Box 2 on the Annex VII"
                            },
                            "quantity": {
                                "title": "Quantity",
                                "minimum": 1,
                                "type": "number",
                                "description": "Number of Bales or other that were loaded.  Populates Box 3 on the Annex VII",
                                "example": 22
                            },
                            "packageTypeCode": {
                                "title": "Package",
                                "type": "string",
                                "description": "The package type code of the smallest external packing unit eg. BL or BN",
                                "example": "BN"
                            }
                        }
                    },
                    "loadingSite": {
                        "$ref": "#/components/schemas/LoadingSite"
                    }
                },
                "description": "The Weight payload for a Loading Site to complete the weighing of planned Traqa loads, data comes from the weighbridge software. "
            },
            "ErrorModel": {
                "title": "Error Schema Model",
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            }
        },
        "securitySchemes": {
            "cognito_apikey_auth": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header",
                "x-amazon-apigateway-authtype": "custom"
            },
            "api_key": {
                "type": "apiKey",
                "name": "x-api-key",
                "in": "header"
            }
        }
    }
}